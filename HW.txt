GitHub. HW_2

Создала внешний репозиторий с названием GitHub_branches
New
Repository name JSON
Public
Add a README file 
Create repository

Клонировала репозтиорий GitHub_branches на локальный компьютер
Code
HPPPS
Copy (копирую ссылку из GitHub)
В GitBush 
git clone Copy (вставляю ссылку из GitHub)
cd GitHub_branches
git branch

1. На локальном репозитории сделать ветки для:
- Postman
- Jmeter
- CheckLists
- Bug Reports
- SQL
- Charles
- Mobile testing
git branch Postman
git branch Jmeter
git branch CheckLists
git branch Bug_Reports
git branch SQL
git branch Charles
git branch Mobile_testing

2. Запушить все ветки на внешний репозиторий
git push -u origin Postman
git push -u origin Jmeter
git push -u origin CheckLists
git push -u origin Bug_Reports
git push -u origin SQL
git push -u origin Charles
git push -u origin Mobile_testing

3. В ветке Bug Reports сделать текстовый документ со структурой баг репорта
git checkout Bug_Reports
touch bug_report.txt
vim bug_report.txt
i (insert)
ID :
Title :
Severity :
Environment :
Precondition :
STR :
1.
2.
3.
Actual result :
Expected result :
Attachment :
Esc
:wq

4. Запушить структуру багрепорта на внешний репозиторий
git add .
git commit -m "add bug_report"
git push

5. Вмержить ветку Bug Reports в Main
git checkout main
git merge Bug_Reports -m "merge Bug_Reports"

6. Запушить main на внешний репозиторий.
git push 

7. В ветке CheckLists набросать структуру чек листа.
git checkout CheckLists
cat > checklist.txt
Регистрация 
Email                Passed
Соцсети              Failed
Валидация полей      Passed
Ctrl+C

8. Запушить структуру на внешний репозиторий
git add .
git commit -m "add checklist"
git push

9. На внешнем репозитории сделать Pull Request ветки CheckLists в main
Pull requests
Compare & pull request
Write - add checklist
Create pull request
Merge pull request
Confirm merge

10. Синхронизировать Внешнюю и Локальную ветки Main
git checkout main
git fetch
git pull
